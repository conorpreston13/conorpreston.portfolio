{"version":3,"sources":["cat.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","id","Navbar","bg","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","target","rel","Container","Jumbotron","Row","Col","bsPrefix","Image","height","src","rounded","ListGroup","Item","CardGroup","Card","style","width","Img","variant","Body","Title","Text","Button","cat","onclick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03602712.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.701039fa.png\";","import React from 'react' \nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Image from 'react-bootstrap/Image'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport cat from './cat.png'\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div id =\"App\">\n      <center>\n      \n        <Navbar bg=\"dark\" expand=\"lg\" fixed = 'top'>\n          <Navbar.Brand href=\"#home\">Conor Preston</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#about\">About Me</Nav.Link>\n              <Nav.Link href=\"#skills\">Skills</Nav.Link>\n              <Nav.Link href=\"#projects\">Projects</Nav.Link>\n              <Nav.Link href=\"#contact\">Contact</Nav.Link>\n              <Nav.Link href='/conor_preston_resume.pdf'  target = '_blank' rel = 'noopener noreferrer'>Resume</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      \n        <Container>\n        <Container>\n            <Jumbotron bg=\"dark-grays\">\n              <Container>\n                <Row>\n                  <Col>\n                    <h1 bsPrefix = 'welcome'>Conor Preston</h1><br/>\n                    <Image height = '300px' src=\"/LEARN_Aug_2019_Conor1.jpg\" rounded />\n                  </Col>\n                  </Row>\n                </Container>\n              </Jumbotron>\n              \n              <Jumbotron>\n                <Container>\n                <h2 id = 'about'>About me</h2><br/>\n                <Image src=\"/person.png\" height=\"100px\" /><br/><br/><br/>\n                  <p>Passionate about technology and the idea of constant learning, my career focus is dedicated to the technology community. Hello, my name is Conor Preston. LEARN Academy is a San Diego based development bootcamp that has provided me with 480+ hours on hands-on development experience in solo, pair and mob-programming. With four years of professional experience in logistics, procurement, service and customer service, I have gained skills that can be directly used in the technology community.\n                  </p>\n                    \n                </Container>\n              </Jumbotron>\n              \n              <Jumbotron>\n               <Container>\n                 <h2 id = 'skills'>Skills</h2><br/>\n                 <Image height = '100px' src = 'tools.png' /><br/><br/><br/>\n                 \n                 <Row>\n                  <Col>\n                  <ListGroup>\n                    <ListGroup.Item>Programming Languages:<br/>Javascript || Ruby || HTML || CSS</ListGroup.Item>\n                    <ListGroup.Item>Frameworks & Libraries:<br/> React || Rails || Bootstrap</ListGroup.Item>\n                    <ListGroup.Item>Applications:<br/>Git/Github || AWS || Postman</ListGroup.Item>\n                    <ListGroup.Item>Test Suites:<br/>RSpec || Enzyme || Jest</ListGroup.Item>\n                  </ListGroup>\n                  </Col>\n                  <Col>\n                  <ListGroup>\n                    <ListGroup.Item>Organizational:<br/>Research || Time Management || Planning </ListGroup.Item>\n                    <ListGroup.Item>Communication:<br/>Written || Verbal || Active Listening</ListGroup.Item>\n                    <ListGroup.Item>Interpersonal:<br/>Compassion || Co-Operation || Integrity </ListGroup.Item>\n                    <ListGroup.Item>Personal:<br/>Motivation || Accountability || Confidence </ListGroup.Item>\n                  </ListGroup>\n                  </Col>\n                  </Row>\n                </Container>\n              </Jumbotron>\n              \n              <Jumbotron>\n                 <Container>\n                   <h2 id = 'projects'>Projects</h2><br/>\n                    <Image height = '150px' src = '/laptop.png' /><br/><br/>\n                  \n                  <CardGroup>\n                    <Card style={{ width: '18rem' }} bg='dark'>\n                      <Card.Img variant=\"top\" src=\"/turntable.png\"/>\n                      <Card.Body>\n                        <Card.Title>Vinyl Tracker</Card.Title>\n                        <Card.Text>\n                          This is a project using a Rails API that was communicated with via Postman.\n                        </Card.Text>\n                        <Button variant=\"dark\">View Vinyl Tracker Code</Button>\n                      </Card.Body>\n                    </Card>\n                    \n                    <Card style={{ width: '18rem' }} bg='dark'>\n                      <Card.Img variant=\"top\" src= { cat } />\n                      <Card.Body>\n                        <Card.Title>Cat Tinder</Card.Title>\n                        <Card.Text>\n                          Cat Tinder is an application that shows, creates and deletes cat profiles. It was created using a Ruby on Rails API, React.js and testing using Enzyme.\n                        </Card.Text>\n                        <a href = \"https://github.com/conorpreston13/cat-dog-tinder-jon-conor\" target =\"_blank\" rel =\"noopener noreferrer\">\n                        <Button variant=\"dark\" onclick=\"https://github.com/conorpreston13/cat-dog-tinder-jon-conor\">View Cat Tinder Code</Button>\n                        </a>\n                      </Card.Body>\n                    </Card> \n                    \n                    <Card style={{ width: '18rem' }} bg='dark'>\n                      <Card.Img variant=\"top\" src=\"/404.png\" />\n                      <Card.Body>\n                        <Card.Title>Get Down</Card.Title>\n                        <Card.Text>\n                          Here is a group project that was built with React-in-Rails. This is an app for on-demand gatherings with friends or other nearby parties.\n                        </Card.Text>\n                        <Button variant=\"dark\">View Get Down Code</Button>\n                      </Card.Body>\n                    </Card>\n                    \n                  </CardGroup>\n                  </Container>\n              </Jumbotron>\n            \n              <Jumbotron>\n                <h2 id = 'contact'>Get in Touch</h2><br/>\n                <Image height = '100px' src = '/contact.png' /><br/><br/><br/><br/>\n                <Container>\n                \n                <Row>\n                <Col>\n                <Image height = '80px' src = '/email.svg' />\n                  <p>preston386@gmail.com</p>\n                  \n                  </Col>\n                  <Col>\n                    <a href = 'https://www.linkedin.com/' target = '_blank' rel = 'noopener noreferrer'>\n                      <Image height = '80px' src='/linkedIn.png' onclick = 'https://www.linkedin.com/conorpreston'  rounded />\n                    </a>\n                    <p>/conorpreston</p>\n                    </Col>\n                    <Col>\n                      <a href = 'https://www.github.com/conorpreston13' target = '_blank' rel = 'noopener noreferrer'>\n                      <Image height = '80px' src='/github.png' rounded />\n                      </a>\n                      <p>/conorpreston13</p>\n                    </Col>\n                </Row>\n                </Container>\n              </Jumbotron>\n              <Jumbotron>\n                  <h5>Made with React.js</h5>\n                  <h5>© Conor Preston 2019</h5>\n              </Jumbotron>\n              \n      </Container>\n      </Container>\n      </center>\n      \n      </div>\n      \n      \n      \n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}